# 골드5 dp

N, K = map(int, input().split())

# 테이블을 그려보면 좀 패턴 파악 가능
# 1 1 1 1
# 2 3 4 5
# 3 6 10 15
# => dp[i][j] = dp[i][j-1]+dp[i-1][j]

# 점화식으로 구해보기
# k=1 인 경우를 기존 거의 뒷부분에 더해서 새로운 거 만들기 -> 곱셈으로 개수 구하기
# ex dp[2][3]
# 0을 1개로 * 2를 2개로 + 1을 1개로 * 2를 2개로 + 2를 1개로 * 0을 2개로
# -> 1개로 만드는 경우는 다 1이니까 안 곱하는 거랑 마찬가지
# dp[n][k] = dp[n][k-1]+dp[n-1][k-1]+...+dp[0][k-1]
# dp[n-1][k] = dp[n-1][k-1]+dp[n-2][k-1] + ... + dp[0][k-1]
# dp[n][k]-dp[n-1][k] = dp[n][k-1]
# dp[n][k] = dp[n][k-1] + dp[n-1][k]

dp = [[1]*(K+1) for _ in range(N+1)]
for i in range(1, N+1):
    for j in range(2, K+1):
        dp[i][j] = (dp[i][j-1]+dp[i-1][j])%1000000000

print(dp[N][K]%1000000000)